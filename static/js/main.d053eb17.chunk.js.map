{"version":3,"sources":["types/index.ts","redux/index.ts","scripts/usageDataController.ts","components/Dashboard.tsx","components/Navbar.tsx","components/Input.tsx","components/Taskbar.tsx","components/App.tsx","index.tsx"],"names":["InitialProductFragment","medium","tariff","supplier","tariffType","paymentMethod","standingCharge","onlineDiscount","from","dualFuelDiscount","annualConsumption","annualCost","tcr","exitFees","unitRates","Standard","Day","Night","Peak","__typename","tariffEndsOn","priceGuaranteedUntil","isEconomy7","isSmartPayg","meterGenerationType","InitialProductDetails","gas","electricity","InitialUsageData","date","usage","cost","rates","name","InitialMeterPoints","technicalDetailsDate","type","smart","canAcceptReadings","readings","cumulative","register","quality","readingDate","source","unit","InitialAccount","currency","balance","pendingBalance","inRangeOfSmartInstaller","initialState","location","isDark","usageData","dailyBudget","elec","productDetails","meterPoints","account","TYPES","locationSelector","state","isDarkSelector","nameSelector","usageDataSelector","dailyBudgetSelector","store","createStore","payload","roundTo2","num","Math","round","Number","EPSILON","calcBudget","days","budge","calcWidth","connect","openInput","map","d","reduce","a","c","dBE","dBG","length","elecBudget","gasBudget","combinedBudget","className","style","marginLeft","marginTop","paddingTop","id","onClick","margin","width","alt","mapDispatchToProps","setLocation","navitems","close","zIndex","title","i","classes","setName","setProductDetails","setMeterPoints","setAccount","setUsageData","FullLogs","error","useState","isExpanded","setIsExpanded","display","flexDirection","height","marginRight","setIsOpenInput","value","setValue","text","loginAttempt","setLoginAttempt","onSubmit","e","preventDefault","htmlFor","autoComplete","onChange","target","placeholder","input","fetch","method","mode","body","JSON","stringify","headers","json","res","verified","obj","console","setIsDark","open","log","process","NAVITEMS","isOpenInput","mySidebar","document","getElementById","overlayBg","useEffect","data","cursor","ReactDOM","render"],"mappings":"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","file":"static/js/main.d053eb17.chunk.js","sourcesContent":["// ----------------------------------------------\r\n// DATA TYPES\r\n// ----------------------------------------------\r\nexport type UnitRatesType = {\r\n  Standard: number;\r\n  Day: number;\r\n  Night: number;\r\n  Peak: number;\r\n  __typename: string;\r\n};\r\n\r\nexport type ProductFragmentType = {\r\n  medium: string;\r\n  tariff: string;\r\n  supplier: string;\r\n  tariffType: string;\r\n  paymentMethod: string;\r\n  standingCharge: number;\r\n  onlineDiscount: number;\r\n  from: string;\r\n  dualFuelDiscount: number;\r\n  annualConsumption: string;\r\n  annualCost: number;\r\n  tcr: string;\r\n  exitFees: number;\r\n  unitRates: UnitRatesType;\r\n  tariffEndsOn: string;\r\n  priceGuaranteedUntil: string;\r\n  isEconomy7: boolean;\r\n  isSmartPayg: boolean;\r\n  meterGenerationType: string;\r\n  __typename: String;\r\n};\r\n\r\nexport type ProductDetailsType = {\r\n  gas: ProductFragmentType;\r\n  electricity: ProductFragmentType;\r\n  __typename: string;\r\n};\r\n\r\nexport type UsageDataType = {\r\n  date: string;\r\n  usage: {\r\n    gas: { cost: string; __typename: string };\r\n    electricity: {\r\n      cost: number;\r\n      rates: [{ cost: number; name: string; __typename: string }];\r\n      __typename: string;\r\n    };\r\n    __typename: string;\r\n  };\r\n  __typename: string;\r\n};\r\n\r\nexport type MeterPointsType = {\r\n  from: string;\r\n  technicalDetailsDate: string;\r\n  type: string;\r\n  smart: boolean;\r\n  canAcceptReadings: boolean;\r\n  __typename: string;\r\n  readings: [\r\n    {\r\n      cumulative: number;\r\n      register: string;\r\n      quality: string;\r\n      readingDate: string;\r\n      source: string;\r\n      unit: string;\r\n      __typename: string;\r\n    }\r\n  ];\r\n};\r\n\r\nexport type AccountType = {\r\n  currency: string;\r\n  balance: number;\r\n  pendingBalance: number;\r\n  inRangeOfSmartInstaller: boolean;\r\n  __typename: string;\r\n};\r\n\r\nexport type EnergyDataType = {\r\n  productDetails: ProductDetailsType;\r\n  usageData: UsageDataType[];\r\n  meterPoints: MeterPointsType[];\r\n  account: AccountType;\r\n};\r\n\r\n// --------------------------------------------\r\n// REDUX\r\n// --------------------------------------------\r\n\r\nexport type DailyBudgetType = { elec: number; gas: number };\r\nexport type StateType = {\r\n  location: string;\r\n  isDark: boolean;\r\n  name: string;\r\n  usageData: UsageDataType[];\r\n  dailyBudget: DailyBudgetType;\r\n  account: AccountType;\r\n  meterPoints: MeterPointsType[];\r\n  productDetails: ProductDetailsType;\r\n};\r\n\r\nexport type ReducerPayloadType =\r\n  | string\r\n  | boolean\r\n  | AccountType\r\n  | DailyBudgetType\r\n  | ProductDetailsType\r\n  | UsageDataType[]\r\n  | MeterPointsType[];\r\n\r\nexport const InitialUnitRates: UnitRatesType = {\r\n  Standard: 0,\r\n  Day: 0,\r\n  Night: 0,\r\n  Peak: 0,\r\n  __typename: \"\",\r\n};\r\n\r\nexport const InitialProductFragment: ProductFragmentType = {\r\n  medium: \"\",\r\n  tariff: \"\",\r\n  supplier: \"\",\r\n  tariffType: \"\",\r\n  paymentMethod: \"\",\r\n  standingCharge: 0,\r\n  onlineDiscount: 0,\r\n  from: \"\",\r\n  dualFuelDiscount: 0,\r\n  annualConsumption: \"\",\r\n  annualCost: 0,\r\n  tcr: \"\",\r\n  exitFees: 0,\r\n  unitRates: InitialUnitRates,\r\n  tariffEndsOn: \"\",\r\n  priceGuaranteedUntil: \"\",\r\n  isEconomy7: true,\r\n  isSmartPayg: true,\r\n  meterGenerationType: \"\",\r\n  __typename: \"\",\r\n};\r\n\r\nexport const InitialProductDetails: ProductDetailsType = {\r\n  gas: InitialProductFragment,\r\n  electricity: InitialProductFragment,\r\n  __typename: \"\",\r\n};\r\n\r\nexport const InitialUsageData: UsageDataType = {\r\n  date: \"\",\r\n  usage: {\r\n    gas: { cost: \"\", __typename: \"\" },\r\n    electricity: {\r\n      cost: 0,\r\n      rates: [{ cost: 0, name: \"\", __typename: \"\" }],\r\n      __typename: \"\",\r\n    },\r\n    __typename: \"\",\r\n  },\r\n  __typename: \"\",\r\n};\r\n\r\nexport const InitialMeterPoints: MeterPointsType = {\r\n  from: \"\",\r\n  technicalDetailsDate: \"\",\r\n  type: \"\",\r\n  smart: true,\r\n  canAcceptReadings: true,\r\n  __typename: \"\",\r\n  readings: [\r\n    {\r\n      cumulative: 0,\r\n      register: \"\",\r\n      quality: \"\",\r\n      readingDate: \"\",\r\n      source: \"\",\r\n      unit: \"\",\r\n      __typename: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const InitialAccount: AccountType = {\r\n  currency: \"\",\r\n  balance: 0,\r\n  pendingBalance: 0,\r\n  inRangeOfSmartInstaller: true,\r\n  __typename: \"\",\r\n};\r\n\r\nexport const InitialEnergyData: EnergyDataType = {\r\n  productDetails: InitialProductDetails,\r\n  usageData: [InitialUsageData],\r\n  meterPoints: [InitialMeterPoints],\r\n  account: InitialAccount,\r\n};\r\n\r\nexport const InitialDailyBudget: DailyBudgetType = {\r\n  elec: 1.0,\r\n  gas: 1.0,\r\n};\r\n\r\n// -----------------------------------------------------\r\n// SERVER DATA TYPES\r\n// -----------------------------------------------------\r\n\r\nexport type UpdateResponseType = {\r\n  name: string;\r\n  verified: boolean;\r\n  obj: EnergyDataType;\r\n  text: string;\r\n  error: string | undefined;\r\n};\r\n\r\n// -----------------------------------------------------\r\n// DISPATCH ACTION TYPES\r\n// -----------------------------------------------------\r\n\r\nexport type ActionGenericType<T> = (payload: T) => { payload: T; type: string };\r\n","import { createStore } from \"redux\";\r\nimport {\r\n  InitialAccount,\r\n  InitialMeterPoints,\r\n  InitialProductDetails,\r\n  InitialUsageData,\r\n  StateType,\r\n  ReducerPayloadType,\r\n  UsageDataType,\r\n  InitialDailyBudget,\r\n  DailyBudgetType,\r\n  ProductDetailsType,\r\n  MeterPointsType,\r\n  AccountType,\r\n} from \"../types\";\r\n// ---------------------------------\r\n// INITIAL APP STATE\r\n// ---------------------------------\r\n\r\nexport const initialState: StateType = {\r\n  location: \"Overview\",\r\n  isDark: true,\r\n  name: \"Guest\",\r\n  usageData: [InitialUsageData],\r\n  dailyBudget: InitialDailyBudget,\r\n  productDetails: InitialProductDetails,\r\n  meterPoints: [InitialMeterPoints],\r\n  account: InitialAccount,\r\n};\r\n\r\n// ---------------------------------\r\n// ACTION TYPES\r\n// ---------------------------------\r\n\r\nexport const TYPES = {\r\n  setLocation: \"setLocation\",\r\n  setIsDark: \"setIsDark\",\r\n  setName: \"setName\",\r\n  setUsageData: \"setUsageData\",\r\n  setDailyBudget: \"setDailyBudget\",\r\n  setProductDetails: \"setProductDetails\",\r\n  setMeterPoints: \"setMeterPoints\",\r\n  setAccount: \"setAccount\",\r\n};\r\n\r\n// ---------------------------------\r\n// SELECTORS\r\n// ---------------------------------\r\n\r\nexport const locationSelector = (state: StateType) => state.location;\r\nexport const isDarkSelector = (state: StateType) => state.isDark;\r\nexport const nameSelector = (state: StateType) => state.name;\r\nexport const usageDataSelector = (state: StateType) => state.usageData;\r\nexport const productDetailsSelector = (state: StateType) =>\r\n  state.productDetails;\r\nexport const meterPointsSelector = (state: StateType) => state.meterPoints;\r\nexport const accountSelector = (state: StateType) => state.account;\r\nexport const dailyBudgetSelector = (state: StateType) => state.dailyBudget;\r\n\r\n// ---------------------------------\r\n// REDUCER\r\n// ---------------------------------\r\n\r\nfunction reducer(\r\n  state: StateType = initialState,\r\n  { type, payload }: { type: string; payload: ReducerPayloadType }\r\n): StateType {\r\n  switch (type) {\r\n    case TYPES.setLocation:\r\n      return { ...state, location: payload as string };\r\n    case TYPES.setIsDark:\r\n      return { ...state, isDark: payload as boolean };\r\n    case TYPES.setName:\r\n      return { ...state, name: payload as string };\r\n    case TYPES.setUsageData:\r\n      return { ...state, usageData: payload as UsageDataType[] };\r\n    case TYPES.setDailyBudget:\r\n      return { ...state, dailyBudget: payload as DailyBudgetType };\r\n    case TYPES.setProductDetails:\r\n      return { ...state, productDetails: payload as ProductDetailsType };\r\n    case TYPES.setMeterPoints:\r\n      return { ...state, meterPoints: payload as MeterPointsType[] };\r\n    case TYPES.setAccount:\r\n      return { ...state, account: payload as AccountType };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","export function roundTo2(num: number): number {\r\n  return Math.round((num + Number.EPSILON) * 100) / 100;\r\n}\r\n\r\nexport function calcBudget(num: number, days: number, budge: number): number {\r\n  return roundTo2((num / (days * budge)) * 100);\r\n}\r\n\r\nexport function calcWidth(budge: number): number {\r\n  return roundTo2((budge / 125) * 100);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  dailyBudgetSelector,\r\n  isDarkSelector,\r\n  usageDataSelector,\r\n} from \"../redux\";\r\n\r\nimport {\r\n  roundTo2,\r\n  calcBudget,\r\n  calcWidth,\r\n} from \"../scripts/usageDataController\";\r\nimport { DailyBudgetType, StateType, UsageDataType } from \"../types\";\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n  return {\r\n    usageData: usageDataSelector(state),\r\n    isDark: isDarkSelector(state),\r\n    dailyBudget: dailyBudgetSelector(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = { setUsageData: TYPES.setUsageData };\r\n\r\ninterface Props {\r\n  openInput?: () => void;\r\n  usageData?: UsageDataType[];\r\n  isDark?: boolean;\r\n  dailyBudget?: DailyBudgetType;\r\n}\r\n\r\nconst Dashboard = ({ openInput, usageData, isDark, dailyBudget }: Props) => {\r\n  const electricity = roundTo2(\r\n    usageData\r\n      ?.map((d: UsageDataType) => Number(d.usage?.electricity?.cost) ?? 0)\r\n      .reduce((a: number, c: number) => a + c, 0) || 0\r\n  );\r\n  const gas = roundTo2(\r\n    usageData\r\n      ?.map((d: UsageDataType) => Number(d.usage?.gas?.cost) ?? 0)\r\n      .reduce((a: number, c: number) => a + c, 0) || 0\r\n  );\r\n  const dBE = dailyBudget?.elec ?? 1;\r\n  const dBG = dailyBudget?.gas ?? 1;\r\n  const days = usageData?.length ?? 1;\r\n  const elecBudget = calcBudget(electricity, days, dBE);\r\n  const gasBudget = calcBudget(gas, days, dBG);\r\n  const combinedBudget = calcBudget(gas + electricity, days, dBE + dBG);\r\n\r\n  return (\r\n    <div className=\"main\" style={{ marginLeft: \"300px\", marginTop: \"43px\" }}>\r\n      <header className=\"container\" style={{ paddingTop: \"22px\" }}>\r\n        <h5>\r\n          <b>\r\n            <i className=\"fa fa-dashboard\"></i>\r\n            <button\r\n              id=\"updateBtn\"\r\n              className={`${isDark ? \"dark-button\" : \"\"}`}\r\n              onClick={openInput}\r\n            >\r\n              {\" \"}\r\n              Update Dashboard\r\n            </button>\r\n          </b>\r\n        </h5>\r\n      </header>\r\n\r\n      <div className=\"row-padding margin-bottom\">\r\n        <div className=\"quarter\">\r\n          <div className=\"container red padding-16\">\r\n            <div className=\"left\">\r\n              <i className=\"fas fa-bolt xxxlarge\"></i>\r\n            </div>\r\n            <div className=\"right\">\r\n              <h3 id=\"electricity-consumption\">{electricity ?? \"~\"}</h3>\r\n            </div>\r\n            <div className=\"clear\"></div>\r\n            <h4>Electricity</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"quarter\">\r\n          <div className=\"container blue padding-16\">\r\n            <div className=\"left\">\r\n              <i className=\"fas fa-fire xxxlarge\"></i>\r\n            </div>\r\n            <div className=\"right\">\r\n              <h3 id=\"gas-consumption\">{gas ?? \"~\"}</h3>\r\n            </div>\r\n            <div className=\"clear\"></div>\r\n            <h4>Gas</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"panel\">\r\n        <div className=\"row-padding\" style={{ margin: \"0-16px\" }}>\r\n          <div className=\"third\">\r\n            <h5>Graph</h5>\r\n            <img style={{ width: \"100%\" }} alt=\"Placeholder\" />\r\n          </div>\r\n          <div className=\"twothird\">\r\n            <h5>Consumption</h5>\r\n            <table\r\n              className={`table ${\r\n                isDark ? \"dark-striped dark-table\" : \"striped white\"\r\n              }`}\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <i className=\"fa fa-bolt text-blue large\"></i>\r\n                  </td>\r\n                  <td>Electricity</td>\r\n                  <td>\r\n                    <i className=\"fa fa-pound-sign\"></i> {electricity}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <i className=\"fa fa-fire text-red large\"></i>\r\n                  </td>\r\n                  <td>Gas</td>\r\n                  <td>\r\n                    <i className=\"fa fa-pound-sign\"></i> {gas}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <i className=\"fa fa-lightbulb text-yellow large\"></i>\r\n                  </td>\r\n                  <td>Combined</td>\r\n                  <td>\r\n                    <i className=\"fa fa-pound-sign\"></i>{\" \"}\r\n                    {roundTo2(gas + electricity)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"container\">\r\n        <h5>Budget for Period: {days} Days</h5>\r\n        <p>Electricity Cost</p>\r\n        <div className={`${isDark ? \"dark-bar\" : \"grey\"}`}>\r\n          <div\r\n            className={`container center padding ${\r\n              elecBudget > 100 ? \"over-budget\" : \"red\"\r\n            }`}\r\n            style={{ width: `${calcWidth(elecBudget)}%` }}\r\n          >\r\n            {elecBudget}%\r\n          </div>\r\n        </div>\r\n\r\n        <p>Gas Cost</p>\r\n        <div className={`${isDark ? \"dark-bar\" : \"grey\"}`}>\r\n          <div\r\n            className={`container center padding ${\r\n              gasBudget > 100 ? \"over-budget\" : \"blue\"\r\n            }`}\r\n            style={{ width: `${calcWidth(gasBudget)}%` }}\r\n          >\r\n            {gasBudget}%\r\n          </div>\r\n        </div>\r\n\r\n        <p>Combined Cost</p>\r\n        <div className={`${isDark ? \"dark-bar\" : \"grey\"}`}>\r\n          <div\r\n            className={`container center padding ${\r\n              combinedBudget > 100 ? \"over-budget\" : \"green\"\r\n            }`}\r\n            style={{ width: `${calcWidth(combinedBudget)}%` }}\r\n          >\r\n            {combinedBudget}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      <div className=\"container\"></div>\r\n      <div className=\"container dark-grey padding-16\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  nameSelector,\r\n  locationSelector,\r\n  TYPES,\r\n  isDarkSelector,\r\n} from \"../redux\";\r\nimport { ActionGenericType, StateType } from \"../types\";\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n  return {\r\n    location: locationSelector(state),\r\n    name: nameSelector(state),\r\n    isDark: isDarkSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setLocation: (payload: string) => ({ type: TYPES.setLocation, payload }),\r\n};\r\n\r\ninterface Props {\r\n  navitems: { classes: string; name: string }[];\r\n  close: () => void;\r\n  name: string;\r\n  setLocation: ActionGenericType<string>;\r\n  location: string;\r\n  isDark: boolean;\r\n}\r\n\r\nconst Navbar = ({\r\n  navitems,\r\n  close,\r\n  name,\r\n  setLocation,\r\n  location,\r\n  isDark,\r\n}: Props) => {\r\n  const COMMON_CLASSES = \"fa-fw padding-right\";\r\n\r\n  return (\r\n    <nav\r\n      className={`sidebar collapse animate-left ${\r\n        isDark ? \"dark-nav\" : \"white\"\r\n      }`}\r\n      style={{ zIndex: 3, width: \"300px\" }}\r\n      id=\"mySidebar\"\r\n    >\r\n      <br />\r\n      <div className=\"container row\">\r\n        <div className=\"col s1\">\r\n          <span className=\"circle margin-right\">\r\n            <i className=\"fas fa-user\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"col s10 bar\">\r\n          <span>\r\n            Welcome, <strong>{name}</strong>\r\n          </span>\r\n          <br />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"container\">\r\n        <h5>Dashboard</h5>\r\n      </div>\r\n      <div className=\"bar-block\">\r\n        <button\r\n          className=\"bar-item button padding-16 hide-large dark-grey hover-black\"\r\n          onClick={() => close()}\r\n          title=\"close menu\"\r\n        >\r\n          <i className=\"fas fa-remove\"></i>  Close Menu\r\n        </button>\r\n        {navitems.map(({ name, classes }, i: number) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => {\r\n              setLocation(name);\r\n              close();\r\n            }}\r\n            className={`bar-item button ${\r\n              location === name ? \"highlight\" : \"\"\r\n            }`}\r\n          >\r\n            <i className={classes + COMMON_CLASSES}></i>\r\n            {name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React, { useState } from \"react\";\r\nimport { TYPES } from \"../redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  AccountType,\r\n  MeterPointsType,\r\n  ProductDetailsType,\r\n  UsageDataType,\r\n  UpdateResponseType,\r\n  ActionGenericType,\r\n} from \"../types\";\r\n\r\nconst URL =\r\n  process.env.REACT_APP_MODE === (\"development\" || \"test\")\r\n    ? \"http://localhost:8000\"\r\n    : \"https://energy-app-api.herokuapp.com/\";\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     location: locationSelector(state),\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  setName: (payload: string) => ({ type: TYPES.setName, payload }),\r\n  setProductDetails: (payload: ProductDetailsType) => ({\r\n    type: TYPES.setProductDetails,\r\n    payload,\r\n  }),\r\n  setMeterPoints: (payload: MeterPointsType[]) => ({\r\n    type: TYPES.setMeterPoints,\r\n    payload,\r\n  }),\r\n  setAccount: (payload: AccountType) => ({ type: TYPES.setAccount, payload }),\r\n  setUsageData: (payload: UsageDataType[]) => ({\r\n    type: TYPES.setUsageData,\r\n    payload,\r\n  }),\r\n};\r\n\r\ninterface Props {\r\n  setName: ActionGenericType<string>;\r\n  setProductDetails: ActionGenericType<ProductDetailsType>;\r\n  setMeterPoints: ActionGenericType<MeterPointsType[]>;\r\n  setAccount: ActionGenericType<AccountType>;\r\n  setIsOpenInput: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUsageData: ActionGenericType<UsageDataType[]>;\r\n}\r\n\r\nconst Input = ({\r\n  setName,\r\n  setProductDetails,\r\n  setMeterPoints,\r\n  setAccount,\r\n  setIsOpenInput,\r\n  setUsageData,\r\n}: Props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [loginAttempt, setLoginAttempt] = useState({ text: \"\", error: \"\" });\r\n\r\n  const verifyAndLogin = (input: string) => {\r\n    setLoginAttempt({ text: \"Attempting to verify...\", error: \"\" });\r\n    (async () => {\r\n      try {\r\n        const res: UpdateResponseType = await (\r\n          await fetch(URL, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            body: JSON.stringify({ input }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n        ).json();\r\n        if (res.verified && !res.error) {\r\n          setIsOpenInput(false);\r\n          setName(res.name);\r\n          setProductDetails(res.obj.productDetails);\r\n          setMeterPoints(res.obj.meterPoints);\r\n          setAccount(res.obj.account);\r\n          setUsageData(res.obj.usageData);\r\n        } else {\r\n          setName(res.name || \"Guest\");\r\n          setLoginAttempt({ text: res.text, error: res.error as string });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        setLoginAttempt({ text: \"Failed to verify password...\", error: err });\r\n      }\r\n    })();\r\n  };\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setValue(e?.target?.value);\r\n  };\r\n  return (\r\n    <form id=\"input\" onSubmit={(e) => e.preventDefault()}>\r\n      <button onClick={() => setIsOpenInput(false)}>X</button>\r\n      <h3>{loginAttempt.text}</h3>\r\n      <label htmlFor=\"pass\">Password</label>\r\n      <input\r\n        autoComplete=\"off\"\r\n        id=\"pass\"\r\n        type=\"password\"\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder=\"Enter Password...\"\r\n      />\r\n      <button id=\"submitBtn\" onClick={() => verifyAndLogin(value)}>\r\n        Submit\r\n      </button>\r\n      {loginAttempt.error && <FullLogs error={loginAttempt.error} />}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst FullLogs = ({ error }: { error: string }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          marginTop: \"1em\",\r\n          height: \"30px\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => setIsExpanded(!isExpanded)}\r\n          style={{ marginLeft: \"0px\", marginRight: \"5px\" }}\r\n        >\r\n          {isExpanded ? \"-\" : \"+\"}\r\n        </button>\r\n        <p style={{ height: \"30px\", margin: \"0px\" }}>Full error...</p>\r\n      </div>\r\n      {isExpanded && <p>{`${error}`}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isDarkSelector, TYPES } from \"../redux\";\r\nimport { ActionGenericType, StateType } from \"../types\";\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n  return {\r\n    isDark: isDarkSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setIsDark: (payload: boolean) => ({ type: TYPES.setIsDark, payload }),\r\n};\r\n\r\ninterface Props {\r\n  isDark: boolean;\r\n  setIsDark: ActionGenericType<boolean>;\r\n  open: () => void;\r\n}\r\n\r\nconst Taskbar = ({ isDark, setIsDark, open }: Props) => {\r\n  return (\r\n    <div className=\"bar top black large\" style={{ zIndex: 4 }}>\r\n      <button\r\n        className=\"bar-item button hide-large hover-none hover-text-white\"\r\n        onClick={() => open()}\r\n      >\r\n        <i className=\"fas fa-bars\"></i>\r\n      </button>\r\n      <button\r\n        onClick={() => setIsDark(!isDark)}\r\n        className={`right button bar-item ${isDark ? \"\" : \"lightbulb\"}`}\r\n      >\r\n        <span>\r\n          <i\r\n            className={`fa fa-lightbulb ${isDark ? \"light-off\" : \"light-on\"}`}\r\n          ></i>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Taskbar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isDarkSelector, TYPES } from \"../redux\";\r\n\r\nimport Dashboard from \"./Dashboard\";\r\nimport Navbar from \"./Navbar\";\r\nimport Input from \"./Input\";\r\nimport Taskbar from \"./Taskbar\";\r\nimport { ActionGenericType, StateType, UsageDataType } from \"../types\";\r\n\r\nconsole.log(process.env.REACT_APP_MODE);\r\nconst URL =\r\n  process.env.REACT_APP_MODE === \"development\"\r\n    ? \"http://localhost:8000/getData\"\r\n    : process.env.REACT_APP_MODE === \"test\"\r\n    ? \"https://raw.githubusercontent.com/ShaunSHamilton/Energy-API/master/example-response.json\"\r\n    : \"https://energy-app-api.herokuapp.com/getData\";\r\n\r\nconst NAVITEMS = [\r\n  { classes: \"fa fa-history \", name: \"Overview\" },\r\n\r\n  { classes: \"fas fa-calendar-day \", name: \"Today\" },\r\n\r\n  { classes: \"fas fa-calendar-week \", name: \"This Week\" },\r\n\r\n  { classes: \"fas fa-calendar-alt \", name: \"This Month\" },\r\n\r\n  { classes: \"far fa-calendar-alt \", name: \"This Year\" },\r\n\r\n  { classes: \"fa fa-pound-sign \", name: \"Tarrifs\" },\r\n\r\n  { classes: \"fa fa-history \", name: \"Usage\" },\r\n];\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n  return {\r\n    isDark: isDarkSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUsageData: (payload: UsageDataType) => ({\r\n    type: TYPES.setUsageData,\r\n    payload,\r\n  }),\r\n};\r\n\r\ninterface Props {\r\n  setUsageData: ActionGenericType<UsageDataType>;\r\n  isDark: boolean;\r\n}\r\n\r\nconst App = ({ setUsageData, isDark }: Props) => {\r\n  const [isOpenInput, setIsOpenInput] = useState(false);\r\n  function open() {\r\n    // Get the Sidebar\r\n    const mySidebar = document.getElementById(\"mySidebar\") as HTMLElement;\r\n\r\n    // Get the DIV with overlay effect\r\n    const overlayBg = document.getElementById(\"myOverlay\") as HTMLElement;\r\n    if (mySidebar.style.display === \"block\") {\r\n      mySidebar.style.display = \"none\";\r\n      overlayBg.style.display = \"none\";\r\n    } else {\r\n      mySidebar.style.display = \"block\";\r\n      overlayBg.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  // Close the sidebar with the close button\r\n  function close() {\r\n    // Get the Sidebar\r\n    const mySidebar = document.getElementById(\"mySidebar\") as HTMLElement;\r\n\r\n    // Get the DIV with overlay effect\r\n    const overlayBg = document.getElementById(\"myOverlay\") as HTMLElement;\r\n    mySidebar.style.display = \"none\";\r\n    overlayBg.style.display = \"none\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const data: { usageData: UsageDataType } = await (\r\n          await fetch(URL)\r\n        ).json();\r\n        setUsageData(data?.usageData);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const openInput = () => {\r\n    setIsOpenInput(!isOpenInput);\r\n  };\r\n\r\n  return (\r\n    <div className={`light-grey ${isDark ? \"dark-app\" : \"\"}`}>\r\n      <Taskbar open={open} />\r\n      <Navbar close={close} navitems={NAVITEMS} />\r\n      <Dashboard openInput={openInput} />\r\n      {isOpenInput && <Input setIsOpenInput={setIsOpenInput} />}\r\n      <div\r\n        className=\"overlay hide-large animate-opacity\"\r\n        onClick={() => close()}\r\n        style={{ cursor: \"pointer\" }}\r\n        title=\"close side menu\"\r\n        id=\"myOverlay\"\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"main\")\r\n);\r\n"],"sourceRoot":""}